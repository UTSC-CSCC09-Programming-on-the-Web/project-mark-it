version: "3.7"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${DEFAULT_EMAIL}
      - NGINX_PROXY_CONTAINER=nginx-proxy

  postgres:
    image: postgres:15
    container_name: mark-it-postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mark-it-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: mark-it-server
    container_name: mark-it-server
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 3001
    environment:
      - STRIPE_TEST_SECRET=${STRIPE_TEST_SECRET}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - PHOTAI_API_KEY=${PHOTAI_API_KEY}
      - CLIPDROP_API_KEY=${CLIPDROP_API_KEY}
      - FRONTEND_DOMAIN=https://${DOMAIN}
      - BACKEND_URL=https://api.${DOMAIN}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - VIRTUAL_HOST=api.${DOMAIN}
      - LETSENCRYPT_HOST=api.${DOMAIN}
      - VIRTUAL_PORT=3001

  mark-it-sockets:
    build:
      context: ./sockets
      dockerfile: Dockerfile
    image: mark-it-sockets
    container_name: mark-it-sockets
    restart: always
    expose:
      - 3000
    environment:
      - FRONTEND_DOMAIN=https://${DOMAIN}
      - VIRTUAL_HOST=sockets.${DOMAIN}
      - LETSENCRYPT_HOST=sockets.${DOMAIN}
      - VIRTUAL_PORT=3000

  frontend:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=https://api.${DOMAIN}
        - VITE_SOCKET_URL=https://sockets.${DOMAIN}
    image: mark-it-frontend
    container_name: mark-it-frontend
    restart: always
    expose:
      - 5173
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - VIRTUAL_PORT=5173

volumes:
  postgres_data: